
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 179923
 */
public class FoodFrame extends javax.swing.JFrame {

    /**
     * Creates new form FoodFrame
     */
    private MealType proteins;
    private MealType vegOrFruits;
    private MealType starches;
    
    public FoodFrame() throws FileNotFoundException {
        initComponents();
        proteins = new MealType();
        vegOrFruits = new MealType();
        starches = new MealType();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        foodManagementTitle = new javax.swing.JLabel();
        fileNameAddField = new javax.swing.JTextField();
        addFoodsFileButton = new javax.swing.JButton();
        addFoodButton = new javax.swing.JButton();
        mealDisplay = new javax.swing.JScrollPane();
        menuField = new javax.swing.JTextArea();
        todaysMenuLabel = new javax.swing.JLabel();
        mainButton = new javax.swing.JButton();
        createMenu = new javax.swing.JButton();
        foodNameField = new javax.swing.JTextField();
        foodTypeField = new javax.swing.JTextField();
        expiryTimeField = new javax.swing.JTextField();
        servingAmountField = new javax.swing.JTextField();
        mealInfoDisplay = new javax.swing.JLabel();
        addFoodDisplay = new javax.swing.JScrollPane();
        foodsAdded = new javax.swing.JTextArea();
        fileNameUpdateField = new javax.swing.JTextField();
        updateFoodsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(getPreferredSize());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        foodManagementTitle.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        foodManagementTitle.setForeground(new java.awt.Color(255, 51, 51));
        foodManagementTitle.setText("Food Management");
        getContentPane().add(foodManagementTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(539, 67, -1, -1));

        fileNameAddField.setText("Enter File Name To Add Foods");
        getContentPane().add(fileNameAddField, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 128, 302, 47));

        addFoodsFileButton.setText("Add Foods from a file");
        addFoodsFileButton.setActionCommand("");
        addFoodsFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFoodsFileButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addFoodsFileButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 217, 302, 69));

        addFoodButton.setText("Add Food");
        addFoodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFoodButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addFoodButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 403, 288, 70));

        menuField.setColumns(20);
        menuField.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        menuField.setRows(5);
        mealDisplay.setViewportView(menuField);

        getContentPane().add(mealDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 695, 1139, 68));

        todaysMenuLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        todaysMenuLabel.setText("Today's menu is...");
        getContentPane().add(todaysMenuLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(634, 648, -1, -1));

        mainButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        mainButton.setText("Back to Main");
        mainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainButtonActionPerformed(evt);
            }
        });
        getContentPane().add(mainButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 574, -1, -1));

        createMenu.setText("Create Menu");
        createMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createMenuActionPerformed(evt);
            }
        });
        getContentPane().add(createMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(589, 553, 288, 77));

        foodNameField.setText("Enter Food Name");
        getContentPane().add(foodNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 322, 174, 31));

        foodTypeField.setText("Enter Food Type (Protein,Starch,Fruit/Veggie)");
        getContentPane().add(foodTypeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(413, 322, 269, 31));

        expiryTimeField.setText("Enter Expiry Time");
        getContentPane().add(expiryTimeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 320, 198, 35));

        servingAmountField.setText("Enter Serving Amount");
        getContentPane().add(servingAmountField, new org.netbeans.lib.awtextra.AbsoluteConstraints(1046, 320, 206, 35));

        mealInfoDisplay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        mealInfoDisplay.setText("Once you have at least one protein, one starch, and one fruit/veggie, click create menu!");
        getContentPane().add(mealInfoDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 513, -1, -1));

        foodsAdded.setColumns(20);
        foodsAdded.setRows(5);
        addFoodDisplay.setViewportView(foodsAdded);

        getContentPane().add(addFoodDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(678, 373, 360, 129));

        fileNameUpdateField.setText("Enter File Name to Update Foods");
        getContentPane().add(fileNameUpdateField, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 128, 293, 47));

        updateFoodsButton.setText("Update foods from a file");
        updateFoodsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFoodsButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateFoodsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 217, 293, 69));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFoodsFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFoodsFileButtonActionPerformed
        // TODO add your handling code here:
        String fileName = fileNameAddField.getText();
        Scanner scan = null;
        try {
            scan = new Scanner(new File(fileName));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FoodFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        while(scan.hasNext())
        {
            String foodName = scan.nextLine();
            String foodType = scan.nextLine();
            double expiry = Double.parseDouble(scan.nextLine());
            int servings = Integer.parseInt(scan.nextLine());
            Food foodFile = new Food(foodName, foodType, expiry, servings);
            scan.nextLine();          
            if(foodType.equals("Protein"))
            {
                proteins.addFood(foodFile);
            }
            else if(foodType.equals("Fruit/Veggie"))
            {
                vegOrFruits.addFood(foodFile);
            }
            else
            {
                starches.addFood(foodFile);
            }
        }
        fileNameAddField.setText("");
    }//GEN-LAST:event_addFoodsFileButtonActionPerformed

    private void addFoodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFoodButtonActionPerformed
        // TODO add your handling code here:
        String foodName = foodNameField.getText();
        String foodType = foodTypeField.getText();
        double expiry = Double.parseDouble(expiryTimeField.getText());
        int amount = Integer.parseInt(servingAmountField.getText());
        Food foodManual = new Food(foodName, foodType, expiry, amount);
        if(foodType.equals("Protein"))
        {
            proteins.addFood(foodManual);
        }
        else if(foodType.equals("Starch"))
        {
            starches.addFood(foodManual);
        }
        else
        {
            vegOrFruits.addFood(foodManual);
        }
        foodsAdded.setText(foodsAdded.getText() + foodNameField.getText() + ", " + foodTypeField.getText() + ", " + expiryTimeField.getText() + ", " + servingAmountField.getText()+ "\n");
        foodNameField.setText("");
        foodTypeField.setText("");
        expiryTimeField.setText("");
        servingAmountField.setText("");
    }//GEN-LAST:event_addFoodButtonActionPerformed

    private void mainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainButtonActionPerformed
       MainFrame main = new MainFrame();
       dispose();
       main.setVisible(true);
    }//GEN-LAST:event_mainButtonActionPerformed

    private void createMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createMenuActionPerformed
        Meal todaysMeal = null;
        try {
            todaysMeal = new Meal(proteins, vegOrFruits, starches);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FoodFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            todaysMeal.createMenu();
        } catch (IOException ex) {
            Logger.getLogger(FoodFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        menuField.setText(todaysMeal.toString());
    }//GEN-LAST:event_createMenuActionPerformed

    private void updateFoodsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFoodsButtonActionPerformed
        try {
            FileWriter fw = new FileWriter("FoodSupplies.dat", false);
            PrintWriter output = new PrintWriter(fw);
            Scanner console = new Scanner(new File(fileNameUpdateField.getText()));
            while(console.hasNext())
            {
                output.println(console.nextLine());
            }
            output.close();
            fw.close();
            fileNameUpdateField.setText("");
            console = new Scanner(new File("FoodSupplies.dat"));
            proteins = new MealType();
            vegOrFruits = new MealType();
            starches = new MealType();
            while(console.hasNext())
            {
                String foodName = console.nextLine();
                String foodType = console.nextLine();
                double expiry = Double.parseDouble(console.nextLine());
                int servings = Integer.parseInt(console.nextLine());
                if(console.hasNext())
                {
                    console.nextLine();
                }
                Food foodUpdate = new Food(foodName, foodType, expiry, servings);       
                if(foodType.equals("Protein"))
                {
                    proteins.addFood(foodUpdate);
                }
                else if(foodType.equals("Fruit/Veggie"))
                {
                    vegOrFruits.addFood(foodUpdate);
                }
                else
                {
                    starches.addFood(foodUpdate);
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(FoodFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateFoodsButtonActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFoodButton;
    private javax.swing.JScrollPane addFoodDisplay;
    private javax.swing.JButton addFoodsFileButton;
    private javax.swing.JButton createMenu;
    private javax.swing.JTextField expiryTimeField;
    private javax.swing.JTextField fileNameAddField;
    private javax.swing.JTextField fileNameUpdateField;
    private javax.swing.JLabel foodManagementTitle;
    private javax.swing.JTextField foodNameField;
    private javax.swing.JTextField foodTypeField;
    private javax.swing.JTextArea foodsAdded;
    private javax.swing.JButton mainButton;
    private javax.swing.JScrollPane mealDisplay;
    private javax.swing.JLabel mealInfoDisplay;
    private javax.swing.JTextArea menuField;
    private javax.swing.JTextField servingAmountField;
    private javax.swing.JLabel todaysMenuLabel;
    private javax.swing.JButton updateFoodsButton;
    // End of variables declaration//GEN-END:variables
}
